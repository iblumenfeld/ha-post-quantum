//SHA256 functions as described in section 4.2.2
ch : [32] -> [32] -> [32] -> [32]
ch x y z = (x && y) ^ (( ~x) && z) 

maj : [32] -> [32] -> [32] -> [32]
maj x y z = (x && y) ^ (x && z) ^ (y && z)

S0 : [32] -> [32]
S0 x = (x >>> 2) ^ (x >>> 13) ^ (x >>> 22)

S1 : [32] -> [32]
S1 x = (x >>> 6) ^ (x >>> 11) ^ (x >>> 25)

s0 : [32] -> [32]
s0 x = (x >>> 7) ^ (x >>> 18) ^ (x >> 3)

s1 : [32] -> [32]
s1 x = (x >>> 17) ^ (x >>> 19) ^ (x >> 10)

//Referring document is FIPS-180-4 which specifies the SHA hash functions
// Constants from Section 4.2.2
Ks = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
]

// The SHA256 Hash round computation and how overall loop is defined in 6.2.2
hash_round : [8][32] -> [64][32] -> [8][32]
hash_round H W = H' where
  T1 = [hi + (S1 ei) + (ch ei fi gi) + ki + wi | hi <- h | ei <- e | fi <- f | gi <- g | ki <- Ks | wi <- W] : [64][32]
  T2 = [(S0 ai) + (maj ai bi ci) | ai <- a | bi <- b | ci <- c ] 
  a = [H@0] # [ti + tj | ti <- T1 | tj <-T2] 
  b = [H@1] # a
  c = [H@2] # b
  d = [H@3] # c
  e = [H@4] # [di + ti | di <- d | ti <- T1]
  f = [H@5] # e
  g = [H@6] # f
  h = [H@7] # g
  H' = H + [a@64, b@64, c@64, d@64, e@64, f@64, g@64, h@64]
